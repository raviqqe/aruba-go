name: test
on:
  push:
    branches:
      - main
  pull_request:
env:
  CUCUMBER_PUBLISH_ENABLED:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: go build
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: go test -race -covermode atomic -coverprofile coverage.txt ./...
  integration_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: go run ./cmd/agoa --strict
  integration_test_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundler exec cucumber --strict --tags 'not @go'
  integration_failure_test_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: >
          bundler exec cucumber --strict --tags 'not @go' failures |
          tee /dev/stderr |
          grep '[0-9]\+ scenarios ([0-9]\+ failed)'
  action_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./.
  dependent_test:
    strategy:
      fail-fast: false
      matrix:
        dependent:
          - directory: schemat
            build: cargo install --path .
          - directory: stak
            build: |
              cargo install stak
              cargo build --profile release_test --package stak --package stak-compile --package stak-interpret
            environment:
              - PATH=$PWD/target/release_test:$PATH
              - STAK_ROOT=$PWD
          - directory: turtle-build
            build: cargo install --path .
        command:
          - install: gem install --user cucumber
            run: cucumber
          - install: go install ./cmd/agoa
            run: agoa
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - run: ${{ matrix.command.install }}
      - run: |
          for variable in ${{ join(matrix.dependent.environment, ' ') }}; do
            echo $variable >> ${{ github.env }}
          done
        working-directory: dependents/${{ matrix.dependent.directory }}
      - run: ${{ matrix.dependent.build }}
        working-directory: dependents/${{ matrix.dependent.directory }}
      - run: ${{ matrix.command.install }}
        working-directory: dependents/${{ matrix.dependent.directory }}
  test:
    needs:
      - build
      - unit_test
      - integration_test
      - integration_test_test
      - integration_failure_test_test
      - dependent_test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: for result in ${{ join(needs.*.result, ' ') }}; do [ $result = success ]; done
